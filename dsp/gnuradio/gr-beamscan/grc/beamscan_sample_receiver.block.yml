id: beamscan_sample_receiver
label: sample_receiver
category: '[beamscan]'

templates:
  imports: from beamscan.sample_receiver import sample_receiver
  make: sample_receiver(${num_samps}, ${signal_freq}, ${samp_rate}, ${n210_1_addr}, ${n210_2_addr}, ${x300_addr})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: num_samps
  label: num_samps
  dtype: int
  default: 50
- id: signal_freq
  label: signal_freq
  dtype: float
  default: 2.44e9
- id: samp_rate
  label: samp_rate
  dtype: float
  default: 100e6
- id: n210_1_addr
  label: USRP N210 sdr ip address
  dtype: string
  default: "192.168.10.2"
- id: n210_2_addr
  label: USRP N210 sdr ip address
  dtype: string
  default: "192.168.10.3"
- id: x300_addr
  label: USRP X300 sdr ip address
  dtype: string
  default: "192.168.40.1"

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
